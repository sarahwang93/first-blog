import { assertInInjectionContext, inject, PLATFORM_ID } from '@angular/core';
import { DOCUMENT, isPlatformBrowser } from '@angular/common';
import { SERVER_INDEXED_DB } from '../lib/ngx-indexed-db.meta';
import { ServerIndexedDB } from './server-indexed-db';
/**
 * Factory function for creating an instance of IDBFactory.
 *
 * It determines the platform using the {@link PLATFORM_ID} to decide whether to use the
 * browser's IndexedDB or a server-side implementation.
 *
 * @returns {IDBFactory} IDBFactory.
 */
export function indexedDbFactory() {
    assertInInjectionContext(indexedDbFactory);
    const platformId = inject(PLATFORM_ID);
    const serverIndexedDB = inject(SERVER_INDEXED_DB, { optional: true }) ?? new ServerIndexedDB();
    return isPlatformBrowser(platformId) ? inject(DOCUMENT).defaultView.indexedDB : serverIndexedDB;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtaW5kZXhlZC1kYi9zcmMvc3NyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlFLE9BQU8sRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdEQ7Ozs7Ozs7R0FPRztBQUNILE1BQU0sVUFBVSxnQkFBZ0I7SUFDOUIsd0JBQXdCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUMzQyxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDdkMsTUFBTSxlQUFlLEdBQUcsTUFBTSxDQUFDLGlCQUFpQixFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksSUFBSSxlQUFlLEVBQUUsQ0FBQztJQUMvRixPQUFPLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDO0FBQ2xHLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRJbkluamVjdGlvbkNvbnRleHQsIGluamVjdCwgUExBVEZPUk1fSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERPQ1VNRU5ULCBpc1BsYXRmb3JtQnJvd3NlciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBTRVJWRVJfSU5ERVhFRF9EQiB9IGZyb20gJy4uL2xpYi9uZ3gtaW5kZXhlZC1kYi5tZXRhJztcbmltcG9ydCB7IFNlcnZlckluZGV4ZWREQiB9IGZyb20gJy4vc2VydmVyLWluZGV4ZWQtZGInO1xuXG4vKipcbiAqIEZhY3RvcnkgZnVuY3Rpb24gZm9yIGNyZWF0aW5nIGFuIGluc3RhbmNlIG9mIElEQkZhY3RvcnkuXG4gKlxuICogSXQgZGV0ZXJtaW5lcyB0aGUgcGxhdGZvcm0gdXNpbmcgdGhlIHtAbGluayBQTEFURk9STV9JRH0gdG8gZGVjaWRlIHdoZXRoZXIgdG8gdXNlIHRoZVxuICogYnJvd3NlcidzIEluZGV4ZWREQiBvciBhIHNlcnZlci1zaWRlIGltcGxlbWVudGF0aW9uLlxuICpcbiAqIEByZXR1cm5zIHtJREJGYWN0b3J5fSBJREJGYWN0b3J5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5kZXhlZERiRmFjdG9yeSgpOiBJREJGYWN0b3J5IHtcbiAgYXNzZXJ0SW5JbmplY3Rpb25Db250ZXh0KGluZGV4ZWREYkZhY3RvcnkpO1xuICBjb25zdCBwbGF0Zm9ybUlkID0gaW5qZWN0KFBMQVRGT1JNX0lEKTtcbiAgY29uc3Qgc2VydmVySW5kZXhlZERCID0gaW5qZWN0KFNFUlZFUl9JTkRFWEVEX0RCLCB7IG9wdGlvbmFsOiB0cnVlIH0pID8/IG5ldyBTZXJ2ZXJJbmRleGVkREIoKTtcbiAgcmV0dXJuIGlzUGxhdGZvcm1Ccm93c2VyKHBsYXRmb3JtSWQpID8gaW5qZWN0KERPQ1VNRU5UKS5kZWZhdWx0Vmlldy5pbmRleGVkREIgOiBzZXJ2ZXJJbmRleGVkREI7XG59XG4iXX0=